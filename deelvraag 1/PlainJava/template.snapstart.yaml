AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Plain Java for Lambda testing (snapstart)

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    SnapStart:
      ApplyOn: PublishedVersions
    Timeout: 20
    MemorySize: 512
    Tracing: Active
    CodeUri: target/PlainJava-1.0-SNAPSHOT.jar
    Runtime: java21
    Environment:
      Variables:
        PRODUCT_TABLE_NAME: !Ref ProductsTable
  Api:
    TracingEnabled: true

Metadata:
  AWS::ServerlessRepo::Application:
    Name: Plain Java Snapstart
    Description: Plain Java project voor het testen van de snelheid van Lambda's met snapstart
    Author: Dyllan
    SpdxLicenseId: Apache-2.0
    Labels: ['tests']
    SemanticVersion: 1.0.0

Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Name: Plain Java Snapstart API

  PutProductFunction:
    Type: AWS::Serverless::Function
    Properties:
      AutoPublishAlias: live
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/LabRole
      Handler: nl.dyllan.handler.CreateProductHandler::handleRequest
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ProductsTable
      Events:
        PutRequest:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /products/{id}
            Method: put
      VersionDescription: Version 1

  GetAllProducts:
    Type: AWS::Serverless::Function
    Properties:
      AutoPublishAlias: live
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/LabRole
      Handler: nl.dyllan.handler.GetAllProductsHandler::handleRequest
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ProductsTable
      Events:
        PutRequest:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /products
            Method: GET
      VersionDescription: Version 1

  GetProduct:
    Type: AWS::Serverless::Function
    Properties:
      AutoPublishAlias: live
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/LabRole
      Handler: nl.dyllan.handler.GetProductByIdHandler::handleRequest
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ProductsTable
      Events:
        PutRequest:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /products/{id}
            Method: GET
      VersionDescription: Version 1

  DeleteProduct:
    Type: AWS::Serverless::Function
    Properties:
      AutoPublishAlias: live
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/LabRole
      Handler: nl.dyllan.handler.DeleteProductHandler::handleRequest
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ProductsTable
      Events:
        PutRequest:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /products/{id}
            Method: DELETE
      VersionDescription: Version 1

  ProductsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: 'PK'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'PK'
          KeyType: 'HASH'
      BillingMode: PAY_PER_REQUEST

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  Api:
    Description: "API Gateway endpoint URL for Prod stage for Dagger sample function"
    Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/prod/products"
