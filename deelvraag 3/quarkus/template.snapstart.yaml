AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  lambda-quarkus-snapstart
  Sample SAM Template for quarkus with SnapStart

Globals:
  Function:
    Tracing: Active
    CodeUri: target/quarkus-lambda-function-1.0.0-SNAPSHOT-aws.jar
    Handler: io.quarkus.amazon.lambda.runtime.QuarkusStreamHandler::handleRequest
    Runtime: java21
    Timeout: 30
    MemorySize: 512
    AutoPublishAlias: live
    SnapStart:
      ApplyOn: PublishedVersions
    Environment:
      Variables:
        PRODUCT_TABLE_NAME: !Ref ProductsTable

Metadata:
  AWS::ServerlessRepo::Application:
    Name: Quarkus Snapstart
    Description: Quarkus project voor het testen van de snelheid van Lambda's met snapstart
    Author: Dyllan
    SpdxLicenseId: Apache-2.0
    Labels: ['tests']
    SemanticVersion: 1.0.0

Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      TracingEnabled: true
      StageName: prod
      Name: Quarkus SnapStart API

  GetProductByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      VersionDescription: Version 1
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/LabRole
      Environment:
        Variables:
          quarkus_lambda_handler: getProductById
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref ProductsTable
      Events:
        GetRequestById:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /products/{id}
            Method: get

  GetProductsFunction:
    Type: AWS::Serverless::Function
    Properties:
      VersionDescription: Version 1
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/LabRole
      Environment:
        Variables:
          quarkus_lambda_handler: getAllProducts
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref ProductsTable
      Events:
        GetRequest:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /products
            Method: get

  PutProductFunction:
    Type: AWS::Serverless::Function
    Properties:
      VersionDescription: Version 1
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/LabRole
      Environment:
        Variables:
          quarkus_lambda_handler: createProduct
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ProductsTable
      Events:
        PutRequest:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /products/{id}
            Method: put

  DeleteProductFunction:
    Type: AWS::Serverless::Function
    Properties:
      VersionDescription: Version 1
      Role: !Sub arn:aws:iam::${AWS::AccountId}:role/LabRole
      Environment:
        Variables:
          quarkus_lambda_handler: deleteProduct
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ProductsTable
      Events:
        PutRequest:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /products/{id}
            Method: delete

  ProductsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: 'PK'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'PK'
          KeyType: 'HASH'
      BillingMode: PAY_PER_REQUEST

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL for Prod stage for Quarkus sample function"
    Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/prod/products"